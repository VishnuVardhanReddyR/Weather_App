{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vishnu/Desktop/react/weather-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/vishnu/Desktop/react/weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/vishnu/Desktop/react/weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/vishnu/Desktop/react/weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/vishnu/Desktop/react/weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/vishnu/Desktop/react/weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./App.css';import\"./weather-icons/css/weather-icons.css\";import Weather from\"./components/weather.component\";import\"bootstrap/dist/css/bootstrap.min.css\";import Form from\"./components/form.component\";var API_KEY=\"c6495ff8b8839c36a2991986616d8307\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));_this.getWeather=function _callee(e){var city,country,api_call,response;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();city=e.target.elements.city.value;country=e.target.elements.country.value;if(!(city&&country)){_context.next=15;break;}_context.next=6;return _regeneratorRuntime.awrap(fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\",\").concat(country,\"&appid=\").concat(API_KEY)));case 6:api_call=_context.sent;_context.next=9;return _regeneratorRuntime.awrap(api_call.json());case 9:response=_context.sent;console.log(response);_this.setState({city:\"\".concat(response.name,\",\").concat(response.sys.country),lat:response.coord.lat,long:response.coord.lon,celsius:_this.calCelsius(response.main.temp),temp_min:_this.calCelsius(response.main.temp_min),temp_max:_this.calCelsius(response.main.temp_max),description:response.weather[0].description,error:false});_this.get_WeatherIcon(_this.weatherIcon,response.weather[0].id);_context.next=16;break;case 15:_this.setState({error:true});case 16:case\"end\":return _context.stop();}}});};_this.state={lat:undefined,long:undefined,city:undefined,country:undefined,icon:undefined,main:undefined,celsius:undefined,temp_max:undefined,temp_min:undefined,description:\"\",err:false};_this.weatherIcon={Thunderstorm:\"wi-thunderstorm\",Drizzle:\"wi-sleet\",Rain:\"wi-storm-showers\",Snow:\"wi-snow\",Atmosphere:\"wi-fog\",Clear:\"wi-day-sunny\",Clouds:\"wi-day-fog\"};return _this;}_createClass(App,[{key:\"get_WeatherIcon\",value:function get_WeatherIcon(icons,rangeId){switch(true){case rangeId>=200&&rangeId<=232:this.setState({icon:this.weatherIcon.Thunderstorm});break;case rangeId>=300&&rangeId<=321:this.setState({icon:this.weatherIcon.Drizzle});break;case rangeId>=500&&rangeId<=531:this.setState({icon:this.weatherIcon.Rain});break;case rangeId>=600&&rangeId<=622:this.setState({icon:this.weatherIcon.Snow});break;case rangeId>=701&&rangeId<=781:this.setState({icon:this.weatherIcon.Atmosphere});break;case rangeId===800:this.setState({icon:this.weatherIcon.Clear});break;case rangeId>=801&&rangeId<=804:this.setState({icon:this.weatherIcon.Clouds});break;default:this.setState({icon:this.weatherIcon.clouds});}}},{key:\"calCelsius\",value:function calCelsius(temp){var cel=Math.floor(temp-273.15);return cel;}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"App\"},React.createElement(\"h1\",{className:\"App-header\"},\"  Weather App\"),React.createElement(Form,{loadWeather:this.getWeather,error:this.state.error}),React.createElement(Weather,{city:this.state.city,country:this.state.country,lat:this.state.lat,long:this.state.long,temp_celsius:this.state.celsius,temp_min:this.state.temp_min,temp_max:this.state.temp_max,description:this.state.description,weatherIcon:this.state.icon}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/vishnu/Desktop/react/weather-app/src/App.js"],"names":["React","Weather","Form","API_KEY","App","getWeather","e","preventDefault","city","target","elements","value","country","fetch","api_call","json","response","console","log","setState","name","sys","lat","coord","long","lon","celsius","calCelsius","main","temp","temp_min","temp_max","description","weather","error","get_WeatherIcon","weatherIcon","id","state","undefined","icon","err","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","clouds","cel","Math","floor","Component"],"mappings":"iuBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,MAAO,uCAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,gCAApB,CACA,MAAO,sCAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,6BAAjB,CAEA,GAAMC,CAAAA,OAAO,CAAG,kCAAhB,C,GAEMC,CAAAA,G,yEACJ,cAAa,qCACX,uEADW,MA4DbC,UA5Da,CA4DA,iBAAMC,CAAN,sJACXA,CAAC,CAACC,cAAF,GACMC,IAFK,CAEEF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAFzB,CAGLC,OAHK,CAGKN,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBE,OAAlB,CAA0BD,KAH/B,MAIPH,IAAI,EAAII,OAJD,4EAKYC,KAAK,4DAAqDL,IAArD,aAA6DI,OAA7D,mBAA8ET,OAA9E,EALjB,SAKLW,QALK,gEAMWA,QAAQ,CAACC,IAAT,EANX,SAMLC,QANK,eAOXC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAEA,MAAKG,QAAL,CAAc,CACZX,IAAI,WAAKQ,QAAQ,CAACI,IAAd,aAAsBJ,QAAQ,CAACK,GAAT,CAAaT,OAAnC,CADQ,CAEZU,GAAG,CAAEN,QAAQ,CAACO,KAAT,CAAeD,GAFR,CAGZE,IAAI,CAAER,QAAQ,CAACO,KAAT,CAAeE,GAHT,CAIZC,OAAO,CAAE,MAAKC,UAAL,CAAgBX,QAAQ,CAACY,IAAT,CAAcC,IAA9B,CAJG,CAKZC,QAAQ,CAAE,MAAKH,UAAL,CAAgBX,QAAQ,CAACY,IAAT,CAAcE,QAA9B,CALE,CAMZC,QAAQ,CAAE,MAAKJ,UAAL,CAAgBX,QAAQ,CAACY,IAAT,CAAcG,QAA9B,CANE,CAOZC,WAAW,CAAEhB,QAAQ,CAACiB,OAAT,CAAiB,CAAjB,EAAoBD,WAPrB,CAQZE,KAAK,CAAE,KARK,CAAd,EAUE,MAAKC,eAAL,CAAqB,MAAKC,WAA1B,CAAsCpB,QAAQ,CAACiB,OAAT,CAAiB,CAAjB,EAAoBI,EAA1D,EAnBS,+BAsBT,MAAKlB,QAAL,CAAc,CAACe,KAAK,CAAE,IAAR,CAAd,EAtBS,+CA5DA,CAEX,MAAKI,KAAL,CAAW,CACThB,GAAG,CAAEiB,SADI,CAETf,IAAI,CAAEe,SAFG,CAGT/B,IAAI,CAAE+B,SAHG,CAIT3B,OAAO,CAAE2B,SAJA,CAKTC,IAAI,CAAED,SALG,CAMTX,IAAI,CAAEW,SANG,CAOTb,OAAO,CAAEa,SAPA,CAQTR,QAAQ,CAAEQ,SARD,CASTT,QAAQ,CAAES,SATD,CAUTP,WAAW,CAAE,EAVJ,CAWTS,GAAG,CAAE,KAXI,CAAX,CAaA,MAAKL,WAAL,CAAiB,CACfM,YAAY,CAAE,iBADC,CAEfC,OAAO,CAAE,UAFM,CAGfC,IAAI,CAAE,kBAHS,CAIfC,IAAI,CAAE,SAJS,CAKfC,UAAU,CAAE,QALG,CAMfC,KAAK,CAAE,cANQ,CAOfC,MAAM,CAAE,YAPO,CAAjB,CAfW,aAwBZ,C,wEAEeC,K,CAAMC,O,CAAQ,CAC5B,OAAO,IAAP,EACE,IAAKA,CAAAA,OAAO,EAAI,GAAX,EAAkBA,OAAO,EAAI,GAAlC,CACE,KAAK/B,QAAL,CAAc,CAACqB,IAAI,CAAE,KAAKJ,WAAL,CAAiBM,YAAxB,CAAd,EACA,MACF,IAAKQ,CAAAA,OAAO,EAAI,GAAX,EAAkBA,OAAO,EAAI,GAAlC,CACE,KAAK/B,QAAL,CAAc,CAACqB,IAAI,CAAE,KAAKJ,WAAL,CAAiBO,OAAxB,CAAd,EACA,MACF,IAAKO,CAAAA,OAAO,EAAI,GAAX,EAAkBA,OAAO,EAAI,GAAlC,CACE,KAAK/B,QAAL,CAAc,CAACqB,IAAI,CAAE,KAAKJ,WAAL,CAAiBQ,IAAxB,CAAd,EACA,MACF,IAAKM,CAAAA,OAAO,EAAI,GAAX,EAAkBA,OAAO,EAAI,GAAlC,CACE,KAAK/B,QAAL,CAAc,CAACqB,IAAI,CAAE,KAAKJ,WAAL,CAAiBS,IAAxB,CAAd,EACA,MACF,IAAKK,CAAAA,OAAO,EAAI,GAAX,EAAkBA,OAAO,EAAI,GAAlC,CACE,KAAK/B,QAAL,CAAc,CAACqB,IAAI,CAAE,KAAKJ,WAAL,CAAiBU,UAAxB,CAAd,EACA,MACF,IAAKI,CAAAA,OAAO,GAAK,GAAjB,CACE,KAAK/B,QAAL,CAAc,CAACqB,IAAI,CAAE,KAAKJ,WAAL,CAAiBW,KAAxB,CAAd,EACA,MACF,IAAKG,CAAAA,OAAO,EAAI,GAAX,EAAkBA,OAAO,EAAI,GAAlC,CACE,KAAK/B,QAAL,CAAc,CAACqB,IAAI,CAAE,KAAKJ,WAAL,CAAiBY,MAAxB,CAAd,EACA,MACF,QACE,KAAK7B,QAAL,CAAc,CAACqB,IAAI,CAAE,KAAKJ,WAAL,CAAiBe,MAAxB,CAAd,EAvBJ,CA0BD,C,8CAEUtB,I,CAAK,CACd,GAAIuB,CAAAA,GAAG,CAAGC,IAAI,CAACC,KAAL,CAAWzB,IAAI,CAAG,MAAlB,CAAV,CACA,MAAOuB,CAAAA,GAAP,CACD,C,uCA6BO,CACN,MACE,4BAAK,SAAS,CAAC,KAAf,EACE,0BAAI,SAAS,CAAC,YAAd,kBADF,CAEE,oBAAC,IAAD,EAAM,WAAW,CAAE,KAAK/C,UAAxB,CAAoC,KAAK,CAAE,KAAKiC,KAAL,CAAWJ,KAAtD,EAFF,CAGE,oBAAC,OAAD,EACA,IAAI,CAAE,KAAKI,KAAL,CAAW9B,IADjB,CAEA,OAAO,CAAE,KAAK8B,KAAL,CAAW1B,OAFpB,CAGA,GAAG,CAAE,KAAK0B,KAAL,CAAWhB,GAHhB,CAIA,IAAI,CAAE,KAAKgB,KAAL,CAAWd,IAJjB,CAKA,YAAY,CAAE,KAAKc,KAAL,CAAWZ,OALzB,CAMA,QAAQ,CAAE,KAAKY,KAAL,CAAWR,QANrB,CAOA,QAAQ,CAAE,KAAKQ,KAAL,CAAWP,QAPrB,CAQA,WAAW,CAAE,KAAKO,KAAL,CAAWN,WARxB,CASA,WAAW,CAAE,KAAKM,KAAL,CAAWE,IATxB,EAHF,CADF,CAiBD,C,iBA1GexC,KAAK,CAACuD,S,EA8GxB,cAAenD,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport \"./weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weather.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"./components/form.component\";\n\nconst API_KEY = \"c6495ff8b8839c36a2991986616d8307\";\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      lat: undefined,\n      long: undefined,\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      err: false \n    };\n    this.weatherIcon={\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons,rangeId){\n    switch(true){\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon: this.weatherIcon.Thunderstorm});\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({icon: this.weatherIcon.Drizzle});\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({icon: this.weatherIcon.Rain});\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({icon: this.weatherIcon.Snow});\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({icon: this.weatherIcon.Atmosphere});\n        break;\n      case rangeId === 800:\n        this.setState({icon: this.weatherIcon.Clear});\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({icon: this.weatherIcon.Clouds});\n        break;\n      default:\n        this.setState({icon: this.weatherIcon.clouds});\n\n    }\n  }\n\n  calCelsius(temp){\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  getWeather = async(e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value; \n    if( city && country ) {\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`);\n    const response= await api_call.json();\n    console.log(response);\n\n    this.setState({\n      city: `${response.name},${response.sys.country}`,\n      lat: response.coord.lat,\n      long: response.coord.lon,\n      celsius: this.calCelsius(response.main.temp),\n      temp_min: this.calCelsius(response.main.temp_min),\n      temp_max: this.calCelsius(response.main.temp_max),\n      description: response.weather[0].description,\n      error: false\n    });\n      this.get_WeatherIcon(this.weatherIcon,response.weather[0].id);\n  }\n    else{\n      this.setState({error: true});\n    }\n\n  };\n\n  render(){\n    return(\n      <div className=\"App\">\n        <h1 className=\"App-header\">  Weather App</h1>\n        <Form loadWeather={this.getWeather} error={this.state.error}/>\n        <Weather \n        city={this.state.city} \n        country={this.state.country}\n        lat={this.state.lat} \n        long={this.state.long}\n        temp_celsius={this.state.celsius}\n        temp_min={this.state.temp_min}\n        temp_max={this.state.temp_max}\n        description={this.state.description}\n        weatherIcon={this.state.icon}\n        />  \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}