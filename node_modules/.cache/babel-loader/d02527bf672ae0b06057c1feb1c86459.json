{"ast":null,"code":"var _jsxFileName = \"/Users/vishnu/Desktop/react/weather-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport \"./weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weather.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"./components/form.component\";\nconst API_KEY = \"c6495ff8b8839c36a2991986616d8307\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_min: this.calCelsius(response.main.temp_min),\n        temp_max: this.calCelsius(response.main.temp_max),\n        description: response.weather[0].description\n      });\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      err: false\n    };\n    this.getWeather();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.clouds\n        });\n    }\n  }\n\n  calCelsius(temp) {\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celsius: this.state.celsius,\n      temp_min: this.state.temp_min,\n      temp_max: this.state.temp_max,\n      description: this.state.description,\n      weatherIcon: this.state.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vishnu/Desktop/react/weather-app/src/App.js"],"names":["React","Weather","Form","API_KEY","App","Component","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celsius","calCelsius","main","temp","temp_min","temp_max","description","weather","get_WeatherIcon","weatherIcon","id","state","undefined","icon","err","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","clouds","cel","Math","floor","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport \"./weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weather.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Form from \"./components/form.component\";\n\nconst API_KEY = \"c6495ff8b8839c36a2991986616d8307\";\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      err: false \n    };\n    this.getWeather();\n    this.weatherIcon={\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons,rangeId){\n    switch(true){\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon: this.weatherIcon.Thunderstorm});\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({icon: this.weatherIcon.Drizzle});\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({icon: this.weatherIcon.Rain});\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({icon: this.weatherIcon.Snow});\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({icon: this.weatherIcon.Atmosphere});\n        break;\n      case rangeId === 800:\n        this.setState({icon: this.weatherIcon.Clear});\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({icon: this.weatherIcon.Clouds});\n        break;\n      default:\n        this.setState({icon: this.weatherIcon.clouds});\n\n    }\n  }\n\n  calCelsius(temp){\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  }\n\n  getWeather = async() => {\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n    const response= await api_call.json();\n    console.log(response);\n\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      celsius: this.calCelsius(response.main.temp),\n      temp_min: this.calCelsius(response.main.temp_min),\n      temp_max: this.calCelsius(response.main.temp_max),\n      description: response.weather[0].description,\n    });\n      this.get_WeatherIcon(this.weatherIcon,response.weather[0].id);\n  };\n\n  render(){\n    return(\n      <div className=\"App\">\n        <Form />\n        <Weather \n        city={this.state.city} \n        country={this.state.country} \n        temp_celsius={this.state.celsius}\n        temp_min={this.state.temp_min}\n        temp_max={this.state.temp_max}\n        description={this.state.description}\n        weatherIcon={this.state.icon}\n        />  \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}