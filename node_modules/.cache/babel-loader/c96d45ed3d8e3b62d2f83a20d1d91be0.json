{"ast":null,"code":"var _jsxFileName = \"/Users/vishnu/Desktop/react/weather-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport \"./weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weather.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nconst API_KEY = \"c6495ff8b8839c36a2991986616d8307\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      err: false\n    };\n    this.getWeather();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celsius: this.state.celsius,\n      temp_min: this.state.temp_min,\n      temp_max: this.state.temp_max,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vishnu/Desktop/react/weather-app/src/App.js"],"names":["React","Weather","API_KEY","App","Component","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","state","undefined","icon","main","celsius","temp_max","temp_min","description","err","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,uCAAP;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAO,sCAAP;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAgBbC,UAhBa,GAgBA,YAAW;AACtB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oEAAmEN,OAAQ,EAA7E,CAA5B;AACA,YAAMO,QAAQ,GAAE,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,IADH;AAEZC,QAAAA,OAAO,EAAEP,QAAQ,CAACQ,GAAT,CAAaD;AAFV,OAAd;AAKD,KA1BY;;AAEX,SAAKE,KAAL,GAAW;AACTJ,MAAAA,IAAI,EAAEK,SADG;AAETH,MAAAA,OAAO,EAAEG,SAFA;AAGTC,MAAAA,IAAI,EAAED,SAHG;AAITE,MAAAA,IAAI,EAAEF,SAJG;AAKTG,MAAAA,OAAO,EAAEH,SALA;AAMTI,MAAAA,QAAQ,EAAEJ,SAND;AAOTK,MAAAA,QAAQ,EAAEL,SAPD;AAQTM,MAAAA,WAAW,EAAE,EARJ;AASTC,MAAAA,GAAG,EAAE;AATI,KAAX;AAWA,SAAKpB,UAAL;AACD;;AAcDqB,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACA,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWJ,IADjB;AAEA,MAAA,OAAO,EAAE,KAAKI,KAAL,CAAWF,OAFpB;AAGA,MAAA,YAAY,EAAE,KAAKE,KAAL,CAAWI,OAHzB;AAIA,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWM,QAJrB;AAKA,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWK,QALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD;;AAzC+B;;AA6ClC,eAAepB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport \"./weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weather.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst API_KEY = \"c6495ff8b8839c36a2991986616d8307\";\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      err: false \n    };\n    this.getWeather();\n  }\n\n  getWeather = async() => {\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n    const response= await api_call.json();\n    console.log(response);\n\n    this.setState({\n      city: response.name,\n      country: response.sys.country\n    })\n\n  };\n\n  render(){\n    return(\n      <div className=\"App\">\n        <Weather \n        city={this.state.city} \n        country={this.state.country} \n        temp_celsius={this.state.celsius}\n        temp_min={this.state.temp_min}\n        temp_max={this.state.temp_max}\n        />  \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}